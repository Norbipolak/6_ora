@keyframes simple-anim {
    from {
        background-color: red;
    }

    to {
        background-color: green;
    }
}

@keyframes advanced-anim {
    0% {
        margin-left: 0px;
        margin-top: 0px
    }

    25% {
        margin-left: 250px;
        margin-top: 0px
    }

    50% {
        margin-left: 250px;
        margin-top: 250px
    }

    75% {
        margin-left: 0px;
        margin-top: 250px
    }

    100% {
        margin-left: 0px;
        margin-top: 0px
    }
}

body {
    min-height: 10000px;
}

* {
    box-sizing: border-box;
}

.grid-4 {
    display: grid;
    /*grid-template-columns: 100px 200px 300px 400px;*/
    /*grid-template-columns: 25% 25% 25% 25%;*/
    /*grid-template-columns: repeat(4, 25%); hozzáadtok a 15px gap-okat és több lesz mint 100% -> auto 25% helyett*/
    /*grid-template-columns: repeat(4, auto);  a grid gapat beleszámolva felosztja a rendelkezésre álló területet, grid gap-at levonje*/
    grid-template-columns: 2fr 4fr 1fr 1fr;
    /* fr (fraction) -> felosztja egységekre a képernyőt*/
    grid-column-gap: 15px;
}

.grid-item {
    padding: 15px;
    background-color: red;
    border: 1px solid grey;
}

.grid-4-row {
    display: grid;
    grid-template-columns: repeat(4, auto);
    /*grid-template-rows: 50px 100px 150px 200px;*/
    grid-template-rows: 2fr 1fr 3fr 1fr;
    grid-row-gap: 15px;
    height: 600px;
    border: 2px solid black;
}

.grid-4-horizontal {
    display: grid;
    grid-template-columns: repeat(4, 150px);
    grid-gap: 15px;
    justify-content: space-around;
    /*start, end, center; space-between, space-evenly, space-around*/

}

.grid-4-vertical {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 50px);
    height: 400px;
    border: 2px solid black;
    align-content: space-around;
    /*start, end, center, space-evenly, space-around, space-between*/
}

.grid-4-elements {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    height: 600px;
    border: 1px solid grey;
}

.grid-item-col-1-3 {
    /*grid-column-start: 1;
    grid-column-end: 3;*/
    grid-column: 1/3;
    background-color: white;
}

.grid-item-row-2-4 {
    /*grid-row-start: 2;
    grid-row-end: 4;*/
    grid-row: 2/4;
    background-color: white;
}

.flex {
    display: flex;
    /*flex-wrap: nowrap; összenyomodik, nem megy be egymás alá, alapbeállítás*/
    flex-wrap: wrap;
    /*nem nyomodik össze, csak bemegy egymás alá */
    /*flex-wrap: wrap-reverse;  bemegy egymás alá, forditott sorrendben*/

    /*flex-direction: column; ha azt akarjuk, hogy egymás alá helyezze el az elemeket
    flex-direction: column-reverse; egymás mellé forditott sorrendben
    flex-direction: row; egymás mellé, alapértelmezett beállítás
    flex-direction: row-reverse; egymás mellé, forditott sorrendben*/

    justify-content: center;
    /*left, right, center, space-between, space-around, space-evenly  --> horizontális elhelyezkedés*/
    height: 800px;
    border: 2px solid black;
    align-content: center;
    /* hasonló mint az align-item, csak itt meg lehet határozni a helyzetet a többi elemhez képest is,
    például az space-between-vel... align item-vel csak a boxhoz képest amiben van. start-end*/
}

.flex-item {
    width: 200px;
    height: 200px;
    background-color: forestgreen;
    border: 2px solid black;
    color: white;
    text-align: center;
    font-size: 25px;
    line-height: 200px;
}

.flex-elements {
    display: flex;
}

.flex-item-2 {
    padding: 15px;
    background-color: cyan;
    border: 2px solid grey;
}

/* style="flex-grow:1;" amit beállítottunk a html-ben ugyanaz, mint a grid-template-columns*/

.simple-anim-square {
    width: 250px;
    height: 250px;
    border: 1px solid grey;
    animation-name: simple-anim;
    animation-duration: 2000ms;
}
.advanced-anim-square {
    width: 250px;
    height: 250px;
    border: 1px solid grey;
    animation-name: advanced-anim;
    animation-duration: 5s;
    animation-delay: 2s;
    animation-iteration-count: 5;
}